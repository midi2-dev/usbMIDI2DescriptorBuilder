{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "object",
  "properties": {

    "idVendor": {
      "title": "USB ID Vendor",
      "description": "Use hex e.g 0x6666",
      "type": "string",
      "pattern": "^0x[0-9ABCDEFabcdef]{4}$"
    },
    "idProduct": {
      "title": "USB ID Product",
      "description": "Use hex e.g 0xCAFE",
      "type": "string",
      "pattern": "^0x[0-9ABCDEFabcdef]{4}$"
    },
    "manufacturer": {
      "title": "Manufacturer",
      "type": "string",
      "maxLength": 254,
      "format": "UTF8"
    },
    "manufacturerId": {
      "title": "Manufacturer Id (L)",
      "description": "This is the System Exclusive ID Number. Please use the format as described by Linux Gadget docs.",
      "type": "string",
      "pattern": "^0x[0-9ABCDEFabcdef]{6}$"
    },
    "version": {
      "title": "Software Revision Id (L)",
      "description": "This is the Software Revision/Version Number. Please use the format as described by Linux Gadget docs.",
      "type": "string",
      "pattern": "^0x[0-9ABCDEFabcdef]{8}$"
    },
    "product": {
      "title": "Product Name",
      "type": "string",
      "maxLength": 98,
      "format": "UTF8"
    },
    "serialNumber": {
      "title": "Serial Number",
      "description": "Serial Number generation should be replaced by a some unique id on the Device e.g. chip id",
      "type": "string",
      "maxLength":42
    },

    "power": {
      "title": "Power (in mA)",
      "type": "integer",
      "maximum": 255
    },
    "titleCDC": {
      "title": "USB CDC (Serial) Support",
      "type": "string",
      "format": "title"
    },
    "CDC": {
      "title": "Serial CDC",
      "description": "Setting to true will enable a CDC interface",
      "type": "boolean"
    },
    "CDCName": {
      "title": "CDC Name",
      "type": "string"
    },
    "title2": {
      "title": "MIDI USB Endpoints",
      "type": "string",
      "format": "title"
    },
    "processUmpManually": {
      "title": "Process UMP Manually (L)",
      "description": "Linux Gadget will attempt to process incoming UMP 1.1. request and respond regardless if there is an attached application to the ALSA Device. Setting this to true will stop this feature.",
      "type": "boolean"
    },

    "endpoints": {
      "title": "Endpoints",
      "description": "More than one UMP Endpoint is not recommended at this time due to limited support.",
      "type": "array",
      "items":{
          "type": "object",
          "properties": {
            "name": {
              "title": "Endpoint Name",
              "type": "string"
            },
            "productId": {
              "title": "Product Instance Id(L)",
              "type": "string",
              "maxLength":42
            },
            "familyId": {
              "title": "Family Id (L)",
              "description": "This is the Family Id. Please use the format as described by Linux Gadget docs.",
              "type": "string",
              "pattern": "^0x[0-9ABCDEFabcdef]{4}$"
            },
            "modelId": {
              "title": "Model Id (L)",
              "description": "This is the Model Id. Please use the format as described by Linux Gadget docs.",
              "type": "string",
              "pattern": "^0x[0-9ABCDEFabcdef]{4}$"
            },
            "title1": {
              "title": "MIDI 1.0 Details",
              "type": "string",
              "format": "title"
            },
            "MIDI1Itf": {
              "title": "MIDI 1.0 Jacks (T)",
              "description": "Limitations: This MIDI 1.0 Descriptor builder doesn't handle more than one source pin, or elements.",
              "type": "array",
              "items": {
                  "type": "object",
                  "properties": {
                    "in": {
                      "title": "Embedded In",
                      "description": "This creates an Embedded Output",
                      "type": "boolean"
                    },
                    "out": {
                      "title": "Embedded Output",
                      "description": "This creates an Embedded Input",
                      "type": "boolean"
                    },
                    "externalCreate": {
                      "title": "Create Matching External ports",
                      "description": "This creates a matching External IN/OUT.",
                      "type": "boolean"
                    },
                    "name": {
                      "title": "MIDI 1.0 Port Name",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name"
                  ]
                }
            },

            "title2": {
              "title": "MIDI 2.0 Details",
              "type": "string",
              "format": "title"
            },
            "defaultGTBProtocol": {
              "title": "Default MIDI 2.0 Protocol",
              "description": "Note this only accepts 0 - unknown, 1 - MIDI 1.0, 2 - MIDI 2.0",
              "type": "integer",
              "minimum": 0,
              "maximum": 2,
              "default": 2
            },
            "blocks": {
              "title": "Blocks",
              "description": "This is generally Group Blocks, however Linux Gadget can also treat these as static Function Blocks. If Blocks are not created then no Alternate Setting 2 is created for USB.",
              "type": "array",
              "items":
                {
                  "type": "object",
                  "properties": {
                    "name": {
                      "title": "Block Name",
                      "type": "string"
                    },
                    "firstGroup": {
                      "title": "First Group (1-16)",
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 16
                    },
                    "numOfGroups": {
                      "title": "Number of Groups (1-16)",
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 16
                    },
                    "in": {
                      "title": "Input",
                      "type": "boolean"
                    },
                    "out": {
                      "title": "Output",
                      "type": "boolean"
                    },

                    "wMaxInputBandwidth": {
                      "title": "Max Input Bandwidth (T)",
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 65535
                    },
                    "wMaxOutputBandwidth": {
                      "title": "Max Output Bandwidth (T)",
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 65535
                    },
                    "uihintIn": {
                      "title": "UI Hint In (Function Block)(L)",
                      "type": "boolean"
                    },
                    "uihintOut": {
                      "title": "UI Hint Out (Function Block)(L)",
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "name",
                    "in",
                    "out",
                    "uihintIn",
                    "uihintOut",
                    "firstGroup",
                    "numOfGroups"
                  ]
                }

            }
          },
          "required": [
            "name",
            "MIDI1Itf",
            "defaultGTBProtocol",
            "blocks"
          ]
        }
    },
    "prefix": {
      "title": "Parameter Prefix (T)",
      "description": "If provided this will prefix parameters with this value",
      "type": "string",
      "pattern": "^[A-Za-z_][a-zA-Z0-9_]*$"
    }
  },
  "required": [
    "idVendor",
    "idProduct",
    "manufacturer",
    "manufacturerId",
    "version",
    "product",
    "serialNumber",
    "power",
    "endpoints",
    "CDC","processUmpManually"
  ]
}